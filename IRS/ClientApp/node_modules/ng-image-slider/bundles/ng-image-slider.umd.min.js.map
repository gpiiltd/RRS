{"version":3,"sources":["ng://ng-image-slider/lib/ng-image-slider.service.ts","ng://ng-image-slider/lib/ng-image-slider.component.ts","ng://ng-image-slider/lib/slider-custom-image/slider-custom-image.component.ts","ng://ng-image-slider/lib/slider-lightbox/slider-lightbox.component.ts","ng://ng-image-slider/lib/ng-image-slider.module.ts"],"names":["NgImageSliderService","prototype","isBase64","str","test","base64FileExtension","substring","length","indexOf","Injectable","youtubeRegExp","validFileExtensions","validVideoExtensions","NgImageSliderComponent","cdRef","platformId","imageSliderService","this","sliderMainDivWidth","imageParentDivWidth","imageObj","leftPos","effectStyle","speed","sliderPrevDisable","sliderNextDisable","slideImageCount","sliderImageWidth","sliderImageHeight","sliderImageSizeWithPadding","autoSlideCount","showArrowButton","textDirection","infinite","imagePopup","imageClick","EventEmitter","arrowClick","lightboxArrowClick","currentImageTitle","ligthboxShow","activeImageIndex","lightboxNextDisable","lightboxPrevDisable","showImage","Object","defineProperty","data","hasOwnProperty","dir","imgObj","count","Math","round","flag","undefined","onResize","event","setSliderWidth","handleKeyboardEvent","key","toLowerCase","nextImage","prevImage","close","ngOnInit","i","unshift","ngAfterViewInit","detectChanges","isPlatformBrowser","imageAutoSlide","ngOnDestroy","autoSlideInterval","clearInterval","ngOnChanges","changes","imageSize","size","previousValue","currentValue","width","height","imageDiv","nativeElement","offsetWidth","sliderMain","nextPrevSliderButtonDisable","imageOnClick","index","showLightbox","emit","_this","setInterval","next","imageMouseEnterHandler","prev","infinitePrevImg","prevImg","sliderArrowDisableTeam","infiniteNextImg","nextImg","setTimeout","pop","push","shift","imageSrc","imageTitle","getImage","nextPrevLigthboxButtonDisable","message","url","title","self","currentImageSrc","fileExtension","replace","match","image","Image","onload","src","swipe","e","when","coord","changedTouches","pageX","pageY","time","Date","getTime","swipeCoord","swipeTime","direction","abs","Component","args","selector","template","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","decorators","type","Inject","PLATFORM_ID","ViewChild","static","Input","Output","HostListener","SliderCustomImageComponent","YOUTUBE","IMAGE","VIDEO","fileUrl","isVideo","alt","SliderLightboxComponent","sanitizer","match_1","bypassSecurityTrustResourceUrl","resetState","closeLightbox","prevImageLightbox","nextImageLightbox","DomSanitizer","NgImageSliderModule","NgModule","imports","CommonModule","declarations","providers","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class NgImageSliderService {\n\n    constructor() { }\n\n    isBase64(str) {\n        var base64regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n        return base64regex.test(str);\n\n    }\n\n    base64FileExtension(str) {\n        return str.substring(\"data:image/\".length, str.indexOf(\";base64\"));\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    OnInit,\n    OnChanges,\n    SimpleChanges,\n    SimpleChange,\n    AfterViewInit,\n    OnDestroy,\n    Input,\n    Output,\n    EventEmitter,\n    ViewEncapsulation,\n    ViewChild,\n    HostListener,\n    PLATFORM_ID,\n    Inject,\n    ElementRef\n} from '@angular/core';\n\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { NgImageSliderService } from './ng-image-slider.service';\n\nconst NEXT_ARROW_CLICK_MESSAGE = 'next',\n    PREV_ARROW_CLICK_MESSAGE = 'previous',\n    LIGHTBOX_NEXT_ARROW_CLICK_MESSAGE = 'lightbox next',\n    LIGHTBOX_PREV_ARROW_CLICK_MESSAGE = 'lightbox previous',\n    youtubeRegExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/,\n    validFileExtensions = ['jpeg', 'jpg', 'gif', 'png'],\n    validVideoExtensions = ['mp4'];\n\n@Component({\n    selector: 'ng-image-slider',\n    templateUrl: './ng-image-slider.component.html',\n    styleUrls: ['./ng-image-slider.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgImageSliderComponent implements OnChanges, OnInit, AfterViewInit, OnDestroy {\n    // for slider\n    sliderMainDivWidth: number = 0;\n    imageParentDivWidth: number = 0;\n    imageObj: Array<object> = [];\n    leftPos: number = 0;\n    effectStyle: string = 'all 1s ease-in-out';\n    speed: number = 1; // default speed in second\n    sliderPrevDisable: boolean = false;\n    sliderNextDisable: boolean = false;\n    slideImageCount: number = 1;\n    sliderImageWidth: number = 205;\n    sliderImageHeight: number = 200;\n    sliderImageSizeWithPadding = 211;\n    autoSlideCount: number = 0;\n    autoSlideInterval;\n    showArrowButton: boolean = true;\n    textDirection: string = 'ltr';\n\n    // for swipe event\n    private swipeCoord?: [number, number];\n    private swipeTime?: number;\n\n    @ViewChild('sliderMain', {static: false}) sliderMain;\n    @ViewChild('imageDiv', {static: false}) imageDiv;\n\n    // @inputs\n    @Input()\n    set imageSize(data) {\n        if (data\n            && typeof (data) === 'object') {\n            if (data.hasOwnProperty('width') && typeof (data['width']) === 'number') {\n                this.sliderImageWidth = data['width'];\n                this.sliderImageSizeWithPadding = data['width'] + 6; // addeing padding with image width\n            }\n            if (data.hasOwnProperty('height') && typeof (data['height']) === 'number') {\n                this.sliderImageHeight = data['height'];\n            }\n        }\n    }\n    @Input() infinite: boolean = false;\n    @Input() imagePopup: boolean = true;\n    @Input()\n    set direction(dir: string)  {\n        if (dir) {\n            this.textDirection = dir;\n        }\n    }\n    @Input()\n    set animationSpeed(data: number) {\n        if (data\n            && typeof (data) === 'number'\n            && data >= 0.1\n            && data <= 5) {\n            this.speed = data;\n            this.effectStyle = `all ${this.speed}s ease-in-out`;\n        }\n    }\n    @Input() set images(imgObj) {\n        if (imgObj && imgObj.length) {\n            this.imageObj = imgObj;\n            this.imageParentDivWidth = imgObj.length * this.sliderImageSizeWithPadding;\n        }\n    }\n    @Input() set slideImage(count) {\n        if (count && typeof count === 'number') {\n            this.slideImageCount = Math.round(count);\n        }\n    }\n    @Input() set autoSlide(count) {\n        if (count && typeof count === 'number' && count >= 1 && count <= 5) {\n            this.autoSlideCount = Math.round(count) * 1000;\n        }\n    }\n    @Input() set showArrow(flag) {\n        if (flag !== undefined && typeof flag === 'boolean') {\n            this.showArrowButton = flag;\n        }\n    }\n\n    // @Outputs\n    @Output() imageClick = new EventEmitter<number>();\n    @Output() arrowClick = new EventEmitter<string>();\n    @Output() lightboxArrowClick = new EventEmitter<object>();\n\n    // for lightbox\n    currentImageSrc: string;\n    currentImageTitle = '';\n    ligthboxShow: boolean = false;\n    activeImageIndex: number = 0;\n    lightboxNextDisable: boolean = false;\n    lightboxPrevDisable: boolean = false;\n    showImage: boolean = true;\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        this.setSliderWidth();\n    }\n    @HostListener('document:keyup', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        if (event && event.key) {\n            if (event.key.toLowerCase() === 'arrowright' && this.ligthboxShow) {\n                this.nextImage();\n            }\n\n            if (event.key.toLowerCase() === 'arrowleft' && this.ligthboxShow) {\n                this.prevImage();\n            }\n\n            if (event.key.toLowerCase() === 'escape' && this.ligthboxShow) {\n                this.close();\n            }\n        }\n    }\n\n    constructor(\n        private cdRef: ChangeDetectorRef,\n        @Inject(PLATFORM_ID) private platformId: Object,\n        public imageSliderService: NgImageSliderService\n        // @Inject(ElementRef) private _elementRef: ElementRef\n    ) {\n    }\n\n    ngOnInit() {\n        // @TODO: for future use\n        // console.log(this._elementRef)\n\n        // for slider\n        if (this.infinite) {\n            this.effectStyle = 'none';\n            this.leftPos = -1 * this.sliderImageSizeWithPadding * this.slideImageCount;\n            for (let i = 1; i <= this.slideImageCount; i++) {\n                this.imageObj.unshift(this.imageObj[this.imageObj.length - i]);\n            }\n        }\n    }\n\n    // for slider\n    ngAfterViewInit() {\n        this.setSliderWidth();\n        this.cdRef.detectChanges();\n        if (isPlatformBrowser(this.platformId)) {\n            this.imageAutoSlide();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.autoSlideInterval) {\n            clearInterval(this.autoSlideInterval);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes && changes.imageSize) {\n            const size: SimpleChange = changes.imageSize;\n            if (size\n                && size.previousValue\n                && size.currentValue\n                && size.previousValue.width && size.previousValue.height\n                && size.currentValue.width && size.currentValue.height\n                && (size.previousValue.width !== size.currentValue.width\n                    || size.previousValue.height !== size.currentValue.height)) {\n                this.setSliderWidth();\n            }\n        }\n    }\n\n    setSliderWidth() {\n        if (this.imageDiv && this.imageDiv.nativeElement && this.imageDiv.nativeElement.offsetWidth) {\n            this.imageParentDivWidth = this.imageObj.length * this.sliderImageSizeWithPadding;\n            this.leftPos = this.infinite ? -1 * this.sliderImageSizeWithPadding * this.slideImageCount : 0;\n        }\n        if (this.sliderMain && this.sliderMain.nativeElement && this.sliderMain.nativeElement.offsetWidth) {\n            this.sliderMainDivWidth = this.sliderMain.nativeElement.offsetWidth;\n        }\n        this.nextPrevSliderButtonDisable();\n    }\n\n    imageOnClick(index) {\n        if (this.imagePopup) {\n            this.activeImageIndex = index;\n            this.showLightbox();\n        }\n        this.imageClick.emit(index);\n    }\n\n    imageAutoSlide() {\n        if (this.infinite && this.autoSlideCount && !this.ligthboxShow) {\n            this.autoSlideInterval = setInterval(() => {\n                this.next();\n            }, this.autoSlideCount);\n        }\n    }\n\n    imageMouseEnterHandler() {\n        if (this.infinite && this.autoSlideCount && this.autoSlideInterval) {\n            clearInterval(this.autoSlideInterval);\n        }\n    }\n\n    prev() {\n        if (!this.sliderPrevDisable) {\n            if (this.infinite) {\n                this.infinitePrevImg();\n            } else {\n                this.prevImg();\n            }\n\n            this.arrowClick.emit(PREV_ARROW_CLICK_MESSAGE);\n            this.sliderArrowDisableTeam();\n        }\n    }\n\n    next() {\n        if (!this.sliderNextDisable) {\n            if (this.infinite) {\n                this.infiniteNextImg();\n            } else {\n                this.nextImg();\n            }\n\n            this.arrowClick.emit(NEXT_ARROW_CLICK_MESSAGE);\n            this.sliderArrowDisableTeam();\n        }\n    }\n\n    prevImg() {\n        if (0 >= this.leftPos + (this.sliderImageSizeWithPadding * this.slideImageCount)) {\n            this.leftPos += this.sliderImageSizeWithPadding * this.slideImageCount;\n        } else {\n            this.leftPos = 0;\n        }\n    }\n\n    nextImg() {\n        if ((this.imageParentDivWidth + this.leftPos) - this.sliderMainDivWidth > this.sliderImageSizeWithPadding * this.slideImageCount) {\n            this.leftPos -= this.sliderImageSizeWithPadding * this.slideImageCount;\n        } else if ((this.imageParentDivWidth + this.leftPos) - this.sliderMainDivWidth > 0) {\n            this.leftPos -= (this.imageParentDivWidth + this.leftPos) - this.sliderMainDivWidth;\n        }\n    }\n\n    infinitePrevImg() {\n        this.effectStyle = `all ${this.speed}s ease-in-out`;\n        this.leftPos = 0;\n\n        setTimeout(() => {\n            this.effectStyle = 'none';\n            this.leftPos = -1 * this.sliderImageSizeWithPadding * this.slideImageCount;\n            for (let i = 0; i < this.slideImageCount; i++) {\n                this.imageObj.unshift(this.imageObj[this.imageObj.length - this.slideImageCount - 1]);\n                this.imageObj.pop();\n            }\n        }, this.speed * 1000);\n    }\n\n    infiniteNextImg() {\n        this.effectStyle = `all ${this.speed}s ease-in-out`;\n        this.leftPos = -2 * this.sliderImageSizeWithPadding * this.slideImageCount;\n        setTimeout(() => {\n            this.effectStyle = 'none';\n            for (let i = 0; i < this.slideImageCount; i++) {\n                this.imageObj.push(this.imageObj[this.slideImageCount]);\n                this.imageObj.shift();\n            }\n            this.leftPos = -1 * this.sliderImageSizeWithPadding * this.slideImageCount;\n        }, this.speed * 1000);\n    }\n\n    /**\n     * Disable slider left/right arrow when image moving\n     */\n    sliderArrowDisableTeam() {\n        this.sliderNextDisable = true;\n        this.sliderPrevDisable = true;\n        setTimeout(() => {\n            this.nextPrevSliderButtonDisable();\n        }, this.speed * 1000);\n    }\n\n    nextPrevSliderButtonDisable() {\n        this.sliderNextDisable = false;\n        this.sliderPrevDisable = false;\n        if (!this.infinite) {\n            if (this.imageParentDivWidth + this.leftPos <= this.sliderMainDivWidth) {\n                this.sliderNextDisable = true;\n            }\n\n            if (this.leftPos >= 0) {\n                this.sliderPrevDisable = true;\n            }\n        }\n    }\n\n    // for lightbox\n    showLightbox() {\n        if (this.imageObj.length && (this.imageObj[0]['image'] || this.imageObj[0]['video'])) {\n            let imageSrc = this.imageObj[0]['image'] || this.imageObj[0]['video'],\n                imageTitle = this.imageObj[0]['title'] || '';\n            if (this.imageObj[this.activeImageIndex]) {\n                imageSrc = this.imageObj[this.activeImageIndex]['image'] || this.imageObj[this.activeImageIndex]['video'];\n                imageTitle = this.imageObj[this.activeImageIndex]['title'] || '';\n            }\n            this.getImage(imageSrc, imageTitle);\n            this.nextPrevLigthboxButtonDisable();\n            this.imageMouseEnterHandler();\n            this.ligthboxShow = true;\n        }\n    }\n\n    nextImage() {\n        if (this.infinite && this.activeImageIndex + 1 >= this.imageObj.length) {\n            this.activeImageIndex = 0;\n        }\n\n        if (this.activeImageIndex + 1 < this.imageObj.length\n            && this.imageObj[this.activeImageIndex + 1]\n            && (this.imageObj[this.activeImageIndex + 1]['image']\n                || this.imageObj[this.activeImageIndex + 1]['video'])) {\n            this.activeImageIndex++;\n            const imageSrc = this.imageObj[this.activeImageIndex]['image'] || this.imageObj[this.activeImageIndex]['video'];\n            const imageTitle = this.imageObj[this.activeImageIndex]['title'] || '';\n            this.getImage(imageSrc, imageTitle);\n            this.nextPrevLigthboxButtonDisable();\n            this.lightboxArrowClick.emit({\n                message: LIGHTBOX_NEXT_ARROW_CLICK_MESSAGE,\n                index: this.activeImageIndex\n            });\n        }\n    }\n\n    prevImage() {\n        if (this.infinite && this.activeImageIndex - 1 <= 0) {\n            this.activeImageIndex = this.imageObj.length;\n        }\n\n        if (this.activeImageIndex - 1 > -1\n            && this.imageObj[this.activeImageIndex - 1]\n            && (this.imageObj[this.activeImageIndex - 1]['image']\n                || this.imageObj[this.activeImageIndex - 1]['video'])) {\n            this.activeImageIndex--;\n            const imageSrc = this.imageObj[this.activeImageIndex]['image'] || this.imageObj[this.activeImageIndex]['video'];\n            const imageTitle = this.imageObj[this.activeImageIndex]['title'] || '';\n            this.getImage(imageSrc, imageTitle);\n            this.nextPrevLigthboxButtonDisable();\n            this.lightboxArrowClick.emit({\n                message: LIGHTBOX_PREV_ARROW_CLICK_MESSAGE,\n                index: this.activeImageIndex\n            });\n        }\n    }\n\n    nextPrevLigthboxButtonDisable() {\n        this.lightboxNextDisable = false;\n        this.lightboxPrevDisable = false;\n        if (!this.infinite) {\n            if (this.activeImageIndex >= this.imageObj.length - 1) {\n                this.lightboxNextDisable = true;\n            }\n\n            if (this.activeImageIndex <= 0) {\n                this.lightboxPrevDisable = true;\n            }\n        }\n    }\n\n    close() {\n        this.ligthboxShow = false;\n        this.imageAutoSlide();\n    }\n\n    getImage(url, title = '') {\n        const self = this;\n        this.currentImageSrc = '';\n        this.showImage = false;\n        if (url) {\n            let fileExtension = url.replace(/^.*\\./, '');\n            if (this.imageSliderService.base64FileExtension(url) \n                && (validFileExtensions.indexOf(this.imageSliderService.base64FileExtension(url).toLowerCase()) > -1 \n                || validVideoExtensions.indexOf(this.imageSliderService.base64FileExtension(url).toLowerCase()) > -1)) {\n                fileExtension = this.imageSliderService.base64FileExtension(url);\n            }\n            // verify for youtube and video url\n            const match = url.match(youtubeRegExp);\n            if ((match && match[2].length === 11)\n                || (fileExtension && validVideoExtensions.indexOf(fileExtension.toLowerCase()) > -1)) {\n                this.currentImageSrc = url;\n                this.currentImageTitle = title;\n                this.showImage = true;\n            } else if (fileExtension && validFileExtensions.indexOf(fileExtension.toLowerCase()) > -1) {\n                const image = new Image();\n                image.onload = function () {\n                    setTimeout(() => {\n                        self.currentImageSrc = url;\n                        self.currentImageTitle = title;\n                        self.showImage = true;\n                    }, 0);\n                };\n                image.src = url;\n            }\n        }\n    }\n\n    /**\n     * Swipe event handler\n     * Reference from https://stackoverflow.com/a/44511007/2067646\n     */\n    swipe(e: TouchEvent, when: string): void {\n        const coord: [number, number] = [e.changedTouches[0].pageX, e.changedTouches[0].pageY];\n        const time = new Date().getTime();\n\n        if (when === 'start') {\n            this.swipeCoord = coord;\n            this.swipeTime = time;\n        } else if (when === 'end') {\n            const direction = [coord[0] - this.swipeCoord[0], coord[1] - this.swipeCoord[1]];\n            const duration = time - this.swipeTime;\n\n            if (duration < 1000 //\n                && Math.abs(direction[0]) > 30 // Long enough\n                && Math.abs(direction[0]) > Math.abs(direction[1] * 3)) { // Horizontal enough\n                if (direction[0] < 0) {\n                    this.next();\n                } else {\n                    this.prev();\n                }\n            }\n        }\n    }\n}\n","import {\n    Component,\n    OnInit,\n    AfterViewInit,\n    OnDestroy,\n    Input\n} from '@angular/core';\nimport { NgImageSliderService } from './../ng-image-slider.service';\n\nconst youtubeRegExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/,\n    validFileExtensions = ['jpeg', 'jpg', 'gif', 'png'],\n    validVideoExtensions = ['mp4'];\n\n@Component({\n    selector: 'custom-img',\n    templateUrl: './slider-custom-image.component.html'\n})\nexport class SliderCustomImageComponent implements OnInit, AfterViewInit, OnDestroy {\n    YOUTUBE = 'youtube';\n    IMAGE = 'image';\n    VIDEO = 'video';\n    fileUrl = '';\n    fileExtension = '';\n    type = this.IMAGE;\n\n    // @inputs\n    @Input()\n    set imageUrl(url) {\n        if (url && typeof (url) === 'string') {\n            this.fileUrl = url;\n            this.fileExtension = url.replace(/^.*\\./, '');\n            if (this.imageSliderService.base64FileExtension(url) \n            && (validFileExtensions.indexOf(this.imageSliderService.base64FileExtension(url).toLowerCase()) > -1 \n            || validVideoExtensions.indexOf(this.imageSliderService.base64FileExtension(url).toLowerCase()) > -1)) {\n                this.fileExtension = this.imageSliderService.base64FileExtension(url);\n            }\n            // verify for youtube url\n            const match = url.match(youtubeRegExp);\n            if (match && match[2].length === 11) {\n                this.type = this.YOUTUBE;\n                this.fileUrl = `https://img.youtube.com/vi/${match[2]}/0.jpg`;\n            } else if (this.fileExtension && validFileExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = this.IMAGE;\n            } else if (this.fileExtension && validVideoExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = this.VIDEO;\n            }\n        }\n    }\n    @Input() isVideo = false;\n    @Input() alt: String = '';\n    @Input() title: String = '';\n    @Input() direction: string = 'ltr';\n\n    constructor(public imageSliderService: NgImageSliderService) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n    }\n\n    ngOnDestroy() {\n    }\n}\n","import {\n    Component,\n    OnInit,\n    AfterViewInit,\n    OnDestroy,\n    Input,\n    Output,\n    EventEmitter,\n    ViewChild,\n    HostListener\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { NgImageSliderService } from './../ng-image-slider.service';\n\nconst youtubeRegExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/,\n    validFileExtensions = ['jpeg', 'jpg', 'gif', 'png'],\n    validVideoExtensions = ['mp4'];\n\n@Component({\n    selector: 'slider-lightbox',\n    templateUrl: './slider-lightbox.component.html'\n})\nexport class SliderLightboxComponent implements OnInit, AfterViewInit, OnDestroy {\n    YOUTUBE = 'youtube';\n    IMAGE = 'image';\n    VIDEO = 'video';\n    fileUrl: SafeResourceUrl = '';\n    fileExtension = '';\n    type = this.IMAGE;\n\n    // @Inputs\n    @Input()\n    set currentImageSrc(url) {\n        if (url && typeof (url) === 'string') {\n            this.fileExtension = url.replace(/^.*\\./, '');\n            if (this.imageSliderService.base64FileExtension(url) \n            && (validFileExtensions.indexOf(this.imageSliderService.base64FileExtension(url).toLowerCase()) > -1 \n            || validVideoExtensions.indexOf(this.imageSliderService.base64FileExtension(url).toLowerCase()) > -1)) {\n                this.fileExtension = this.imageSliderService.base64FileExtension(url);\n            }\n            // verify for youtube url\n            const match = url.match(youtubeRegExp);\n            if (match && match[2].length === 11) {\n                this.type = '';\n                setTimeout(() => {\n                    this.type = this.YOUTUBE;\n                    url = `${'//www.youtube.com/embed/'}${match[2]}`;\n                    this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n                }, 50);\n            } else if (this.fileExtension && validFileExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = this.IMAGE;\n                this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n            } else if (this.fileExtension && validVideoExtensions.indexOf(this.fileExtension.toLowerCase()) > -1) {\n                this.type = '';\n                setTimeout(() => {\n                    this.type = this.VIDEO;\n                    this.fileUrl = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n                }, 50);\n            }\n        }\n    }\n    @Input() currentImageTitle;\n    @Input() showImage;\n    @Input() lightboxPrevDisable;\n    @Input() lightboxNextDisable;\n    @Input() direction: string = 'ltr';\n\n    // @Output\n    @Output() close = new EventEmitter<any>();\n    @Output() prevImage = new EventEmitter<any>();\n    @Output() nextImage = new EventEmitter<any>();\n\n    /* @ViewChild('lightboxDiv') lightboxDiv;\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        const widthAspectRatio = 16 / 9;\n        const heightAspectRatio = 9 / 16;\n        console.log('this.lightboxDiv.nativeElement.offsetWidth', this.lightboxDiv.nativeElement.offsetWidth);\n        console.log('this.lightboxDiv.nativeElement.offsetHeight', this.lightboxDiv.nativeElement.offsetHeight);\n        if (this.lightboxDiv.nativeElement.offsetWidth && this.lightboxDiv.nativeElement.offsetHeight) {\n            const calculatedWidth = 480 * (this.lightboxDiv.nativeElement.offsetWidth / this.lightboxDiv.nativeElement.offsetHeight);\n            const calculatedHeight = 385 * (this.lightboxDiv.nativeElement.offsetHeight / this.lightboxDiv.nativeElement.offsetWidth);\n            console.log('calculated widht and height =>', calculatedWidth, calculatedHeight);\n\n        }\n    } */\n\n    constructor(private sanitizer: DomSanitizer, public imageSliderService: NgImageSliderService) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n    }\n\n    ngOnDestroy() {\n       this.resetState();\n    }\n\n    closeLightbox() {\n        this.close.emit();\n    }\n\n    prevImageLightbox() {\n        this.prevImage.emit();\n    }\n\n    nextImageLightbox() {\n        this.nextImage.emit();\n    }\n\n    resetState() {\n        this.fileUrl = '';\n        this.fileExtension = '';\n        this.type = this.IMAGE;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgImageSliderComponent } from './ng-image-slider.component';\nimport { SliderCustomImageComponent } from './slider-custom-image/slider-custom-image.component';\nimport { SliderLightboxComponent } from './slider-lightbox/slider-lightbox.component';\nimport { NgImageSliderService } from './ng-image-slider.service';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        NgImageSliderComponent,\n        SliderCustomImageComponent,\n        SliderLightboxComponent\n    ],\n    providers: [\n        NgImageSliderService\n    ],\n    exports: [NgImageSliderComponent]\n})\nexport class NgImageSliderModule { }\n"]}